{"entries":[{"timestamp":1731714062938,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"\nlet counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    basic.showNumber(counter);\n})\n\ninput.onButtonPressed(Button.B, () => {\n    basic.showString(`Test ${counter}`);\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}"]],"start1":0,"start2":0,"length1":403,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#2407c300c2e303375a174fb1e570989231d23a6a\""],[0,"\n"],[1,""],[0,"    "]],"start1":138,"start2":138,"length1":110,"length2":9},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":235,"start2":235,"length1":32,"length2":31}]}]},{"timestamp":1731714328973,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"\n\n"],[0,"let coun"]],"start1":0,"start2":0,"length1":8,"length2":10},{"diffs":[[0," Test2();\n    }\n"],[1,""],[0,"    return null;"]],"start1":369,"start2":369,"length1":32,"length2":32},{"diffs":[[0,"l;\n}"],[-1,"\n\nfunction showResultTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    console.log(results)\n}\n\nfunction executeTest(){\n\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]){\n\n}\n\nfunction doExo2(input: int16[][]) {\n\n}"]],"start1":399,"start2":399,"length1":471,"length2":4}]}]},{"timestamp":1731714928129,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,", ()=>{\n    "],[-1,"//"],[0,"basic.showNu"]],"start1":135,"start2":135,"length1":26,"length2":24},{"diffs":[[0,"r);\n"],[-1,"    showResultTest();\n"],[0,"})\n\n"]],"start1":170,"start2":170,"length1":30,"length2":8},{"diffs":[[0,"    "],[-1,"//"],[0,"basi"]],"start1":218,"start2":218,"length1":10,"length2":8},{"diffs":[[0,"`);\n"],[-1,"    executeTest();\n"],[0,"})\n\n"]],"start1":255,"start2":255,"length1":27,"length2":8},{"diffs":[[0,"    "],[-1,"show(results)\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n            console.log\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    checkTest(test,solver(test.getInput()));\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]){\n    let output = [];\n    for (let i = 0 ; i < input.length ; i++){\n        output.push(input[i].reverse());\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;"],[1,"console.log(results)\n}\n\nfunction executeTest(){\n\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]){\n\n}\n\nfunction doExo2(input: int16[][]) {\n"],[0,"\n}"]],"start1":599,"start2":599,"length1":861,"length2":269}]}]},{"timestamp":1731715525879,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"sole.log"],[-1,"(results)"],[0,"\n    }\n "]],"start1":741,"start2":741,"length1":25,"length2":16},{"diffs":[[0,"    "],[-1,"let line = [];\n        for (let j = input[i].length -1 ; j >=0 ; j--){\n            line.push(input[i][j])\n        }\n        output.push(line"],[1,"output.push(input[i].reverse()"],[0,");\n "]],"start1":1275,"start2":1275,"length1":148,"length2":38}]}]},{"timestamp":1731716150120,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"(results"],[-1,"[]"],[0,")\n    }\n"]],"start1":749,"start2":749,"length1":18,"length2":16}]}]},{"timestamp":1731716161302,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"const r = (results as number[][])\n        for (let i = 0 ; i < r.length ; i++){\n            console.log(r[0].reduce((a:any,b:any)=>b = `${b},${a}`,'')\n        }"],[1,"    console.log(results[])"],[0,"\n   "]],"start1":730,"start2":730,"length1":168,"length2":34},{"diffs":[[0,"t16[][])"],[-1,":number[][]"],[0,"{\n    le"]],"start1":1205,"start2":1205,"length1":27,"length2":16},{"diffs":[[0,"tput"],[-1,":number[][]"],[0," = ["]],"start1":1225,"start2":1225,"length1":19,"length2":8},{"diffs":[[0,"line"],[-1,":number[]"],[0," = ["]],"start1":1294,"start2":1294,"length1":17,"length2":8},{"diffs":[[0,"    "],[-1,"    console.log(output[0])\n    }\n    console.log(output[0])"],[1,"}"],[0,"\n   "]],"start1":1433,"start2":1433,"length1":67,"length2":9}]}]},{"timestamp":1731716761111,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"[])\n"],[-1,"        let line:string = \"\"\n"],[0,"    "]],"start1":764,"start2":764,"length1":37,"length2":8},{"diffs":[[0,"    "],[-1,"for (let j = 0; j < r[i].length; j++) {\n                line += r[i][j]=== 0 ? '.' : '#'\n            }\n            line+= \"\\n\"\n            console.log(line)\n        }\n        basic.showLeds(line)"],[1,"console.log(r[0].reduce((a:any,b:any)=>b = `${b},${a}`,'')\n        }"],[0,"\n   "]],"start1":822,"start2":822,"length1":203,"length2":76},{"diffs":[[0,"(line);\n    "],[-1,"}"],[1,"    console.log(output[0])\n    }\n    console.log(output[0])"],[0,"\n    return "]],"start1":1590,"start2":1590,"length1":25,"length2":83}]}]},{"timestamp":1731717345233,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"er[][])\n"],[1,"        let line:string = \"\"\n"],[0,"        "]],"start1":760,"start2":760,"length1":16,"length2":45},{"diffs":[[0,"        "],[-1,"if("],[1,"line += "],[0,"r[i][j]="]],"start1":903,"start2":903,"length1":19,"length2":24},{"diffs":[[0,"== 0"],[-1,"){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n       "],[1," ? '.' : '#'\n            }\n            line+= \"\\n\"\n            console.log(line)\n"],[0,"        "],[-1," "],[0,"}\n  "]],"start1":927,"start2":927,"length1":120,"length2":97},{"diffs":[[0,"    "],[-1,"    }  \n        }"],[1,"basic.showLeds(line)"],[0,"\n   "]],"start1":1026,"start2":1026,"length1":25,"length2":28},{"diffs":[[0,"  }\n    "],[-1,"//"],[0,"checkTes"]],"start1":1282,"start2":1282,"length1":18,"length2":16},{"diffs":[[0,"t())"],[-1," "],[0,");\n"],[-1,"    checkTest(test, [\n        [0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ])\n"],[0,"}\n\nf"]],"start1":1324,"start2":1324,"length1":165,"length2":11}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ta#2"],[-1,"cab473a5f4060a9b8c7ea1c1c443ceede924aad"],[1,"407c300c2e303375a174fb1e570989231d23a6a"],[0,"\"\n  "]],"start1":199,"start2":199,"length1":47,"length2":47}]}]},{"timestamp":1731717902869,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"function compare2(t1: any[], t2: any[]) {\n    if (t1.length != t2.length) {\n        return false\n    }\n    for (let i = 0; i <= t1.length - 1; i++) {\n        if (t1[i].length != t2[i].length) {\n            return false\n        }\n        for (let j = 0; j <= t1[i].length - 1; j++) {\n            if (t1[i][j] != t2[i][j]) {\n                return false\n            }\n        }\n    }\n    return true\n}\n\n"],[0,"func"]],"start1":1119,"start2":1119,"length1":409,"length2":8},{"diffs":[[0," executeTest(){\n"],[1,""],[0,"    const test ="]],"start1":1131,"start2":1131,"length1":32,"length2":32},{"diffs":[[0,"   c"],[-1,"ompare2(solver(test.getInput())"],[1,"heckTest(test"],[0,", [\n"]],"start1":1321,"start2":1321,"length1":39,"length2":21}]}]},{"timestamp":1731718007929,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ength !="],[-1,"="],[0," t2[i].l"]],"start1":1292,"start2":1292,"length1":17,"length2":16}]}]},{"timestamp":1731791911298,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"i][j] !="],[-1,"="],[0," t2[i][j"]],"start1":1426,"start2":1426,"length1":17,"length2":16}]}]},{"timestamp":1731791913257,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t1: "],[-1,"number[][], t2: number[]"],[1,"any[], t2: any"],[0,"[]) "]],"start1":1141,"start2":1141,"length1":32,"length2":22},{"diffs":[[0,"ength !="],[-1,"="],[0," t2.leng"]],"start1":1177,"start2":1177,"length1":17,"length2":16},{"diffs":[[0," );\n"],[-1,"    const results = solver(test.getInput()) as number[][];\n"],[0,"    "]],"start1":1719,"start2":1719,"length1":67,"length2":8},{"diffs":[[0,"Input())"],[-1," as number[][])"],[0,", [\n    "]],"start1":1751,"start2":1751,"length1":31,"length2":16}]}]},{"timestamp":1731792509232,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  }\n    "],[1,"//"],[0,"checkTes"]],"start1":1682,"start2":1682,"length1":16,"length2":18},{"diffs":[[0," //checkTest"],[-1,"2"],[0,"(test,solver"]],"start1":1689,"start2":1689,"length1":25,"length2":24},{"diffs":[[0,"    "],[-1,"/*"],[0,"cons"],[-1,"ole.log("],[1,"t results = solver(test.getInput()) as number[][];\n    "],[0,"comp"]],"start1":1734,"start2":1734,"length1":22,"length2":67},{"diffs":[[0,"mber[][]"],[1,")"],[0,", [\n    "]],"start1":1835,"start2":1835,"length1":16,"length2":17},{"diffs":[[0," 0]\n"],[1,""],[0,"    ])"],[-1,");*/\n}\n\nfunction checkTest2(tester: Test<any>, data: any) {\n    console.log(data)"],[0,"\n}\n\n"]],"start1":1968,"start2":1968,"length1":95,"length2":14}]}]},{"timestamp":1731792848592,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ta)\n"],[-1,"    tester.check(data as number[][])\n"],[0,"}\n\nf"]],"start1":2009,"start2":2009,"length1":45,"length2":8}]}]},{"timestamp":1731793303681,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"t2(test,"],[-1," "],[0,"solver(t"]],"start1":1698,"start2":1698,"length1":17,"length2":16},{"diffs":[[0,"Input())"],[-1," as number[][]"],[0," );\n    "]],"start1":1721,"start2":1721,"length1":30,"length2":16},{"diffs":[[0,", data: "],[-1,"number[][]"],[1,"any"],[0,") {\n    "]],"start1":1976,"start2":1976,"length1":26,"length2":19},{"diffs":[[0,"cons"],[-1,"t results = data as number[][];\n    console.log(data)\n    compare2()\n    new Test1().check(results"],[1,"ole.log(data)\n    tester.check(data as number[][]"],[0,")\n}\n"]],"start1":1995,"start2":1995,"length1":106,"length2":57}]}]},{"timestamp":1731793903509,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"heckTest"],[1,"2"],[0,"(test, s"]],"start1":1691,"start2":1691,"length1":16,"length2":17},{"diffs":[[0,"Input())"],[1," as number[][]"],[0," );\n    "]],"start1":1722,"start2":1722,"length1":16,"length2":30},{"diffs":[[0,", data: "],[-1,"any"],[1,"number[][]"],[0,") {\n    "]],"start1":1991,"start2":1991,"length1":19,"length2":26},{"diffs":[[0,"cons"],[-1,"ole.log(compare(data, [\n        [0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ])"],[1,"t results = data as number[][];\n    console.log(data)\n    compare2("],[0,")\n    "],[-1,"//"],[0,"new "]],"start1":2017,"start2":2017,"length1":170,"length2":81}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ata#"],[-1,"edfee6449b56d423d295eaaa5e2d76ed0c197867"],[1,"2cab473a5f4060a9b8c7ea1c1c443ceede924aad"],[0,"\"\n  "]],"start1":198,"start2":198,"length1":48,"length2":48}]}]},{"timestamp":1731794497601,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()"],[1,"show(results:any){\n    if (Array.isArray(results)){\n        const r = (results as number[][])\n        for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }"],[0,"\n    if"],[-1," "],[0,"(t"],[-1,"est "],[1,"ypeof results ="],[0,"== "],[1,"\""],[0,"nu"],[-1,"ll || solver == null"],[1,"mber\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction compare2(t1: number[][], t2: number[][]) {\n    if (t1.length !== t2.length"],[0,") {\n"]],"start1":670,"start2":670,"length1":122,"length2":540},{"diffs":[[0,"{\n        return"],[-1,";"],[1," false"],[0,"\n    }\n    check"]],"start1":1208,"start2":1208,"length1":33,"length2":38},{"diffs":[[0,"    "],[-1,"checkTest(test, solver(test.getInput()) );\n}\n\nfunction testOrShowTest(fct:(test :Test<any>,data: number[][])=>void) "],[1,"for (let i = 0; i <= t1.length - 1; i++) {\n        if (t1[i].length !== t2[i].length) {\n            return false\n        }\n        for (let j = 0; j <= t1[i].length - 1; j++) {\n            if (t1[i][j] !== t2[i][j]) {\n                return false\n            }\n        }\n    }\n    return true\n}\n\nfunction executeTest()"],[0,"{\n  "]],"start1":1237,"start2":1237,"length1":124,"length2":326},{"diffs":[[0,"    "],[-1,"f"],[0,"c"],[1,"heckTes"],[0,"t(te"]],"start1":1686,"start2":1686,"length1":10,"length2":16},{"diffs":[[0,"t())"],[1," "],[0,");\n"],[-1,"}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n        const r = results"],[1,"    /*console.log(compare2(solver(test.getInput())"],[0," as "]],"start1":1725,"start2":1725,"length1":100,"length2":62},{"diffs":[[0,"mber[][]"],[-1,";"],[1,", ["],[0,"\n       "]],"start1":1789,"start2":1789,"length1":17,"length2":19},{"diffs":[[0,"    "],[-1,"for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber"],[1,"[0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ]));*/\n}\n\nfunction checkTest2(tester: Test<any>, data: any) {\n    console.log(compare(data, [\n        [0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ]))\n    //new Test1().check"],[0,"(res"]],"start1":1805,"start2":1805,"length1":336,"length2":377},{"diffs":[[0,"esults)\n"],[-1,"    }\n}\n\n"],[1,"}"],[0,"\n\nfuncti"]],"start1":2180,"start2":2180,"length1":25,"length2":17}]}]},{"timestamp":1731795078445,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"testOrShowTest((_,results)=>"],[1,"const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    "],[0,"show"]],"start1":475,"start2":475,"length1":36,"length2":177},{"diffs":[[0,"   show(results)"],[-1,")"],[0,"\n}\n\nfunction exe"]],"start1":645,"start2":645,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"testOrShowTest((test, results) => checkTest(test, results))"],[1,"const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    checkTest(test, solver(test.getInput()) );"],[0,"\n}\n\n"]],"start1":689,"start2":689,"length1":67,"length2":175},{"diffs":[[0,">,data: "],[-1,"any"],[1,"number[][]"],[0,")=>void)"]],"start1":907,"start2":907,"length1":19,"length2":26}]}]},{"timestamp":1731795184359,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"s)\n    }\n}\n\n"],[1,"\n\n"],[0,"function get"]],"start1":1294,"start2":1294,"length1":24,"length2":26}]}]},{"timestamp":1731797882541,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]}]},{"timestamp":1731797946063,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":331,"start2":331,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// les tests vont ici ; cela ne sera pas compilé si ce paquet est utilisé en tant qu'extension.\n"}]}],"snapshots":[{"timestamp":1731714062937,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1731715977733,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    //basic.showNumber(counter);\n    showResultTest();\n})\n\ninput.onButtonPressed(Button.B, () => {\n    //basic.showString(`Test ${counter}`);\n    executeTest();\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}\n\nfunction showResultTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    show(results)\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n            console.log(results)\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    checkTest(test,solver(test.getInput()));\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]){\n    let output = [];\n    for (let i = 0 ; i < input.length ; i++){\n        console.log(input[i])\n        console.log(input[i].reverse())\n        output.push(input[i].reverse());\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;\n}","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#2407c300c2e303375a174fb1e570989231d23a6a\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1731717778385,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    //basic.showNumber(counter);\n    showResultTest();\n})\n\ninput.onButtonPressed(Button.B, () => {\n    //basic.showString(`Test ${counter}`);\n    executeTest();\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}\n\nfunction showResultTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    show(results)\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n        const r = (results as number[][])\n        for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    checkTest(test,solver(test.getInput()) as number[][]);\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]):number[][]{\n    let output:number[][] = [];\n    for (let i = 0 ; i < input.length ; i++){\n        let line:number[] = [];\n        for (let j = input[i].length -1 ; j >=0 ; j--){\n            line.push(input[i][j])\n        }\n        output.push(line);\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;\n}","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#2407c300c2e303375a174fb1e570989231d23a6a\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1731791911298,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    //basic.showNumber(counter);\n    showResultTest();\n})\n\ninput.onButtonPressed(Button.B, () => {\n    //basic.showString(`Test ${counter}`);\n    executeTest();\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}\n\nfunction showResultTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    show(results)\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n        const r = (results as number[][])\n        for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction compare2(t1: any[], t2: any[]) {\n    if (t1.length != t2.length) {\n        return false\n    }\n    for (let i = 0; i <= t1.length - 1; i++) {\n        if (t1[i].length != t2[i].length) {\n            return false\n        }\n        for (let j = 0; j <= t1[i].length - 1; j++) {\n            if (t1[i][j] != t2[i][j]) {\n                return false\n            }\n        }\n    }\n    return true\n}\n\nfunction executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    //checkTest(test,solver(test.getInput()) );\n    compare2(solver(test.getInput()), [\n        [0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ])\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]):number[][]{\n    let output:number[][] = [];\n    for (let i = 0 ; i < input.length ; i++){\n        let line:number[] = [];\n        for (let j = input[i].length -1 ; j >=0 ; j--){\n            line.push(input[i][j])\n        }\n        output.push(line);\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;\n}","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#2cab473a5f4060a9b8c7ea1c1c443ceede924aad\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1731793794785,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    //basic.showNumber(counter);\n    showResultTest();\n})\n\ninput.onButtonPressed(Button.B, () => {\n    //basic.showString(`Test ${counter}`);\n    executeTest();\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}\n\nfunction showResultTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null){\n        return;\n    }\n    const results = solver(test.getInput());\n    show(results)\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n        const r = (results as number[][])\n        for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\nfunction compare2(t1: number[][], t2: number[][]) {\n    if (t1.length !== t2.length) {\n        return false\n    }\n    for (let i = 0; i <= t1.length - 1; i++) {\n        if (t1[i].length !== t2[i].length) {\n            return false\n        }\n        for (let j = 0; j <= t1[i].length - 1; j++) {\n            if (t1[i][j] !== t2[i][j]) {\n                return false\n            }\n        }\n    }\n    return true\n}\n\nfunction executeTest(){\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    checkTest2(test, solver(test.getInput()) as number[][] );\n    /*console.log(compare2(solver(test.getInput()) as number[][], [\n        [0, 0, 0, 0, 1],\n        [0, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 0],\n        [1, 0, 0, 0, 0]\n    ]));*/\n}\n\nfunction checkTest2(tester: Test<any>, data: number[][]) {\n    const results = data as number[][];\n    console.log(data)\n    tester.check(results)\n}\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]):number[][]{\n    let output:number[][] = [];\n    for (let i = 0 ; i < input.length ; i++){\n        let line:number[] = [];\n        for (let j = input[i].length -1 ; j >=0 ; j--){\n            line.push(input[i][j])\n        }\n        output.push(line);\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;\n}","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#2cab473a5f4060a9b8c7ea1c1c443ceede924aad\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1731797882541,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"let counter = 0;\n\ninput.onLogoEvent(TouchButtonEvent.Released, ()=>{\n    counter = (counter + 1)%10;\n})\n\ninput.onButtonPressed(Button.A, ()=>{\n    //basic.showNumber(counter);\n    showResultTest();\n})\n\ninput.onButtonPressed(Button.B, () => {\n    //basic.showString(`Test ${counter}`);\n    executeTest();\n})\n\nfunction getTest(){\n    switch(counter){\n        case 0 : return new Test1();\n        case 1: return new Test2();\n    }\n    return null;\n}\n\nfunction showResultTest(){\n    testOrShowTest((_,results)=>show(results))\n}\n\nfunction executeTest(){\n    testOrShowTest((test, results) => checkTest(test, results))\n}\n\nfunction testOrShowTest(fct:(test :Test<any>,data: any)=>void) {\n    const test = getTest()\n    const solver = getExoSolver()\n    if (test == null || solver == null) {\n        return;\n    }\n    fct(test, solver(test.getInput()));\n}\n\nfunction show(results:any){\n    if (Array.isArray(results)){\n        const r = results as number[][];\n        for (let i = 0 ; i < r.length ; i++){\n            for (let j = 0; j < r[i].length; j++) {\n                if(r[i][j]=== 0){\n                    led.unplot(i,j)\n                }else{\n                    led.plot(i,j)\n                }\n            }  \n        }\n    }\n    if(typeof results === \"number\"){\n        basic.showNumber(results)\n    }\n}\n\n\n\nfunction getExoSolver(){\n    switch(counter){\n        case 0 : return doExo1;\n        case 1 : return doExo2;\n    }\n    return null;\n}\n\nfunction doExo1(input: int16[][]):number[][]{\n    let output:number[][] = [];\n    for (let i = 0 ; i < input.length ; i++){\n        let line:number[] = [];\n        for (let j = input[i].length -1 ; j >=0 ; j--){\n            line.push(input[i][j])\n        }\n        output.push(line);\n    }\n    return output;\n}\n\nfunction doExo2(input: int16[][]) {\n    let sum = 0;\n    for(let i = 0 ; i < input.length ; i++){\n        sum+=input[i].reduce((a,b)=>a+b, 0)\n    }\n    return sum;\n}","README.md":"","pxt.json":"{\n    \"name\": \"Kata implem\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Kata tests\": \"github:jotitan/microbit-tests-kata#edfee6449b56d423d295eaaa5e2d76ed0c197867\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1731797946071}